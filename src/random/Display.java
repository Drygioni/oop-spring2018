/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package random;

import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.concurrent.ThreadLocalRandom;
import java.util.stream.IntStream;

/**
 *
 * @author Jared
 */
public class Display extends javax.swing.JFrame {

    /**
     * Creates new form Display
     */
    public Display() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        StatsGen = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        might = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        dex = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        con = new javax.swing.JTextArea();
        per = new javax.swing.JScrollPane();
        Pers = new javax.swing.JTextArea();
        intel = new javax.swing.JScrollPane();
        Intel = new javax.swing.JTextArea();
        jScrollPane7 = new javax.swing.JScrollPane();
        resolve = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        ShowRace = new javax.swing.JTextArea();
        Racegen = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        ShowClass = new javax.swing.JTextArea();
        ClassGen = new javax.swing.JButton();
        AllGen = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        ShowGender = new javax.swing.JTextArea();
        GenGen = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        StatsGen.setText("Generate Stats");
        StatsGen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StatsGenActionPerformed(evt);
            }
        });

        jLabel1.setText("Random Chartacter Generator");

        jLabel2.setText("Might");

        jLabel3.setText("Dexterity");

        jLabel4.setText("Constitution");

        jLabel5.setText("Perception");

        jLabel6.setText("Intelligence");

        jLabel7.setText("Resolve");

        jLabel8.setText("Stats");

        might.setColumns(20);
        might.setRows(5);
        jScrollPane2.setViewportView(might);

        dex.setColumns(20);
        dex.setRows(5);
        jScrollPane3.setViewportView(dex);

        con.setColumns(20);
        con.setRows(5);
        jScrollPane4.setViewportView(con);

        Pers.setColumns(20);
        Pers.setRows(5);
        per.setViewportView(Pers);

        Intel.setColumns(20);
        Intel.setRows(5);
        intel.setViewportView(Intel);

        resolve.setColumns(20);
        resolve.setRows(5);
        jScrollPane7.setViewportView(resolve);

        ShowRace.setColumns(20);
        ShowRace.setRows(5);
        jScrollPane1.setViewportView(ShowRace);

        Racegen.setText("Generate Race");
        Racegen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RacegenActionPerformed(evt);
            }
        });

        ShowClass.setColumns(20);
        ShowClass.setRows(5);
        jScrollPane5.setViewportView(ShowClass);

        ClassGen.setText("Generate Class");
        ClassGen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClassGenActionPerformed(evt);
            }
        });

        AllGen.setText("Generate All");
        AllGen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AllGenActionPerformed(evt);
            }
        });

        ShowGender.setEditable(false);
        ShowGender.setColumns(20);
        ShowGender.setRows(5);
        ShowGender.setAutoscrolls(false);
        jScrollPane6.setViewportView(ShowGender);

        GenGen.setText("Generate Gender");
        GenGen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenGenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addGap(42, 42, 42))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel4)
                                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(32, 32, 32)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(StatsGen))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(AllGen, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(GenGen, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Racegen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(ClassGen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(per, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(intel, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jLabel8)
                        .addGap(70, 70, 70)
                        .addComponent(jLabel1)))
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(per, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(intel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Racegen, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ClassGen, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(GenGen, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(StatsGen, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AllGen, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public enum Races {
        Coastal_Aumaua,Island_Aumaua,Boreal_Dwarf,Mountain_Dwarf,Pale_Elf,Wood_Elf,Death_Godlike,
        Fire_Godlike,Nature_Godlike,Moon_Godlike,Meadow_Human,Savannah_Human,Ocean_Human,Hearth_Orlan,
        Wild_Orlan;
    }
    public enum Classes{
        Barbarian,Chanter,Cipher,Druid,Fighter,Monk,Paladin,Priest,Ranger,Rogue,Wizard;
    }
    public void randomer(int[] rand) {
        int count = 6;
        int max = 57;
        int i;
        
        max -= count;
        for (i = 0; i < count - 1; i++) {
            rand[i] = ThreadLocalRandom.current().nextInt(0, max + 1);
        }
        rand[count - 1] = max - rand[count - 1];
        Arrays.sort(rand);
        for (i = count - 1; i > 0; i--) {
            rand[i] -= rand[i - 1];
        }
        //Sets the minimum to three
        for (i = 0; i < count; i++) {
            rand[i] += 3;
        }
        int total = 75 - IntStream.of(rand).sum();
        while (total > 0) {
            int rannum = ThreadLocalRandom.current().nextInt(0, 6);
            rand[rannum]++;
            total--;
        }
    }
    public void randomstats(){
                int count = 6;
        int[] rand = new int[count];
        do {
            randomer(rand);
        } while (rand[0] > 18 || rand[1] > 18 || rand[2] > 18 || rand[3] > 18 || rand[4] > 18 || rand[5] > 18);
        System.out.println(IntStream.of(rand).sum());
        might.setText(String.valueOf(rand[0]));
        dex.setText(String.valueOf(rand[1]));
        con.setText(String.valueOf(rand[2]));
        Pers.setText(String.valueOf(rand[3]));
        Intel.setText(String.valueOf(rand[4]));
        resolve.setText(String.valueOf(rand[5]));
        StatsGen.setText("Reroll Stats");
    }
    public void randomrace()
    {
        List<Enum> races = new ArrayList<>();
        races.addAll(Arrays.asList(Races.values()));
        int random = ThreadLocalRandom.current().nextInt(0,races.size());
        ShowRace.setText(String.valueOf(races.get(random)));
         Racegen.setText("Reroll Race");
        
        
       
    }
    public void randomclass(){
        List<Enum> classes = new ArrayList<>();
        classes.addAll(Arrays.asList(Classes.values()));
        int random = ThreadLocalRandom.current().nextInt(0,classes.size());
        ShowClass.setText(String.valueOf(classes.get(random)));
        ClassGen.setText("Reroll Class");
    }
    public void randomgender(){
        Boolean random = ThreadLocalRandom.current().nextBoolean();
        if (random == true)ShowGender.setText("Female");
        else ShowGender.setText("Male");
        GenGen.setText("Reroll Gender");
    }
    private void StatsGenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StatsGenActionPerformed
        // TODO add your handling code here:
        // 57 points to distribute
//        int count = 6;
//        int[] rand = new int[count];
//        do {
//            randomer(rand);
//        } while (rand[0] > 18 || rand[1] > 18 || rand[2] > 18 || rand[3] > 18 || rand[4] > 18 || rand[5] > 18);
//        System.out.println(IntStream.of(rand).sum());
//        might.setText(String.valueOf(rand[0]));
//        dex.setText(String.valueOf(rand[1]));
//        con.setText(String.valueOf(rand[2]));
//        Pers.setText(String.valueOf(rand[3]));
//        Intel.setText(String.valueOf(rand[4]));
//        resolve.setText(String.valueOf(rand[5]));
        randomstats();
        

    }//GEN-LAST:event_StatsGenActionPerformed

    private void RacegenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RacegenActionPerformed
        // TODO add your handling code here:
        randomrace();
       

    }//GEN-LAST:event_RacegenActionPerformed

    private void ClassGenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClassGenActionPerformed
        // TODO add your handling code here:
        randomclass();
        
        
    }//GEN-LAST:event_ClassGenActionPerformed

    private void AllGenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AllGenActionPerformed
        // TODO add your handling code here:
        randomstats();
        randomrace();
        randomclass();
        randomgender();
        AllGen.setText("Reroll All");
    }//GEN-LAST:event_AllGenActionPerformed

    private void GenGenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenGenActionPerformed
        // TODO add your handling code here:
        randomgender();
    }//GEN-LAST:event_GenGenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Display().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AllGen;
    private javax.swing.JButton ClassGen;
    private javax.swing.JButton GenGen;
    private static javax.swing.JTextArea Intel;
    private static javax.swing.JTextArea Pers;
    private javax.swing.JButton Racegen;
    private static javax.swing.JTextArea ShowClass;
    private static javax.swing.JTextArea ShowGender;
    private static javax.swing.JTextArea ShowRace;
    private javax.swing.JButton StatsGen;
    private static javax.swing.JTextArea con;
    private static javax.swing.JTextArea dex;
    private javax.swing.JScrollPane intel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private static javax.swing.JTextArea might;
    private javax.swing.JScrollPane per;
    private static javax.swing.JTextArea resolve;
    // End of variables declaration//GEN-END:variables
}
